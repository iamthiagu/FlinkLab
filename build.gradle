plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group 'com.flinklab'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

def flinkVersion = '1.20.1'
def avroVersion = '1.11.1'

dependencies {
    implementation "org.apache.flink:flink-java:${flinkVersion}"
    implementation "org.apache.flink:flink-streaming-java:${flinkVersion}"
    implementation "org.apache.flink:flink-clients:${flinkVersion}"
    implementation "org.apache.flink:flink-avro:${flinkVersion}"
    implementation "org.apache.avro:avro:${avroVersion}"
    implementation 'org.slf4j:slf4j-api:1.7.36'
    runtimeOnly 'org.slf4j:slf4j-log4j12:1.7.36'
    runtimeOnly 'log4j:log4j:1.2.17'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources/schema" // This tells Gradle to include all files from src/main/resources in the JAR's resources
        }
    }
}

application {
    mainClass = 'com.flinklab.FlinkLabApp'
}

shadowJar {
    archiveBaseName.set('flink-lab-app')
    archiveClassifier.set('')
    archiveVersion.set('')
    configurations = [project.configurations.runtimeClasspath]
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

tasks.named('test') {
    useJUnitPlatform()
}